# Global settings
global:
  name: kafka
  namespace: kafka-system

# Image settings
image:
  repository: acrfiquantitprod001.azurecr.io/kafka
  tag: latest
  pullPolicy: Always

# Kafka settings
kafka:
  replicaCount: 3
  brokerCount: 3
  heapOpts: "-Xmx1G -Xms1G"
  resources:
    requests:
      cpu: 500m
      memory: 1Gi
    limits:
      cpu: 1000m
      memory: 2Gi
  persistence:
    enabled: true
    storageClass: "managed-premium"
    size: 100Gi
    mountPath: "/var/lib/kafka/data"
  config:
    autoCreateTopicsEnable: true
    deleteTopicEnable: true
    numPartitions: 3
    defaultReplicationFactor: 3
    logRetentionHours: 168  # 7 days
    logRetentionBytes: -1   # Unlimited
    logSegmentBytes: 1073741824
    minInsyncReplicas: 2
    
# ZooKeeper settings
zookeeper:
  enabled: true
  replicaCount: 3
  resources:
    requests:
      cpu: 250m
      memory: 512Mi
    limits:
      cpu: 500m
      memory: 1Gi
  persistence:
    enabled: true
    storageClass: "managed-premium"
    size: 20Gi
    mountPath: "/var/lib/zookeeper/data"

# Network settings
service:
  type: ClusterIP
  kafka:
    port: 9092
    targetPort: 9092
  zookeeper:
    port: 2181
    targetPort: 2181

# Ingress configuration
ingress:
  enabled: false
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
  hosts:
    - host: kafka.example.com
      paths: ["/"]
  tls: []

# Security settings
security:
  runAsUser: 1000
  fsGroup: 1000
  authentication:
    enabled: false
    # sasl:
    #   enabled: false
    #   mechanism: plain
  authorization:
    enabled: false
    superUsers: []

# Monitoring
monitoring:
  enabled: true
  serviceMonitor:
    enabled: true
    interval: 10s
  jmxExporter:
    enabled: true
    port: 5556

# Pod disruption budget
podDisruptionBudget:
  enabled: true
  minAvailable: 2

# Node selection
nodeSelector:
  owner: "fiquant"

# Tolerations
tolerations:
  - key: "owner"
    operator: "Equal"
    value: "fiquant"
    effect: "NoSchedule"

# Affinity rules
affinity:
  podAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchExpressions:
            - key: "app"
              operator: In
              values:
                - kafka
        topologyKey: "kubernetes.io/hostname"

# Logging configuration
logging:
  loggers:
    kafka.controller: INFO
    kafka.producer.async.DefaultEventHandler: INFO
    state.change.logger: INFO

# Healthcheck configuration
probes:
  livenessProbe:
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 3
  readinessProbe:
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 3

# Update strategy
updateStrategy:
  type: RollingUpdate
  rollingUpdate:
    maxSurge: 1
    maxUnavailable: 0 